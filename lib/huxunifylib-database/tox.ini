# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.


# run the following environments in this order
[tox]
envlist = py37, style, safety, checkCoverage


# setup the test environment for py37 and testing the huxunify package
[testenv:py37]
# install pipenv
usedevelop=True
deps = pipenv
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --pre --dev --ignore-pipfile
    # run the pytests
    pipenv run '{envbindir}/pytest'


# setup the environment for testing the style of the huxunify package
[testenv:style]
deps = pipenv
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --pre --dev --ignore-pipfile

    # run pylint
    pipenv run '{envbindir}/pylint' --rcfile=../../.pylintrc '{toxinidir}/huxunifylib'

    # run the black check
    pipenv run '{envbindir}/black' --check '{toxinidir}/huxunifylib'

    # run the mypy check
    pipenv run '{envbindir}/mypy' --config-file=../../mypy.ini '{toxinidir}/huxunifylib'


[testenv:safety]
deps = pipenv
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --pre --dev --ignore-pipfile
    pipenv run '{envbindir}/safety' check

[testenv:bandit]
deps =
    pipenv
    bandit
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --pre --dev --ignore-pipfile
    # -ll : Only issues with medium or higher level of severity
    # -ii : Only issues with medium or higher level of confidence
    # B105 : hardcoded_password_string, B311: random
    pipenv run bandit -r {toxinidir}/huxunifylib --exclude {toxinidir}/huxunifylib/database/tests --skip B105,B311 -ll -ii

[testenv:checkCoverage]
# Used for testing Coverage
deps=
    {[testenv:py37]deps}
    coverage
changedir={toxinidir}/huxunifylib
commands=
    {[testenv:py37]commands}
    {envbindir}/pipenv run coverage run --rcfile={toxinidir}/../../.coveragerc --source=./database -m unittest
    {envbindir}/pipenv run coverage report --rcfile={toxinidir}/../../.coveragerc
