# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

# run the following environments in this order
[tox]
envlist = py37, pylintCheck, createApp, checkCoverage

[testenv]
skip_install=true
setenv =
    ARTIFACTORY_PYTHON_READ = {env:ARTIFACTORY_PYTHON_READ}
    FLASK_ENV = pytest
deps =
    pipenv
commands =
    {envbindir}/pip install --upgrade pip
    {envbindir}/pip install pipenv --upgrade
    {envbindir}/pipenv install --ignore-pipfile --dev

    # install dev in a pre-release
    {envbindir}/pip install black

# setup the test environment for py37 and testing the huxunify package
[testenv:py37]
deps =
    {[testenv]deps}
    pytest
commands =
    {[testenv]commands}

    # run the pytests
    pipenv run pytest

[testenv:pylintCheck]
deps = pipenv
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --pre --dev --ignore-pipfile

    # run pylint
    pipenv run '{envbindir}/pylint' --rcfile=../../.pylintrc '{toxinidir}/huxunify/api'

[testenv:createApp]
# Used for testing NON dev packages to ensure the API will build/run.
setenv =
    ARTIFACTORY_PYTHON_READ = {env:ARTIFACTORY_PYTHON_READ}
    FLASK_ENV = pytest
commands =
    {envbindir}/pip install --upgrade pip
    {envbindir}/pip install pipenv
    {envbindir}/pipenv install --ignore-pipfile
    python -m unittest {toxinidir}/huxunify/test/route/test_app.py

[testenv:checkCoverage]
# Used for testing Coverage
deps=
    {[testenv]deps}
    coverage
commands=
    {[testenv]commands}
    {envbindir}/pipenv run coverage run --rcfile={toxinidir}/../../.coveragerc --source={toxinidir}/huxunify/api -m unittest
    {envbindir}/pipenv run coverage report --rcfile={toxinidir}/../../.coveragerc
