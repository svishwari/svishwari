# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

# run the following environments in this order
[tox]
envlist = py37, style, safety

[testenv]
skip_install=true
setenv =
    JFROG_USERNAME = {env:JFROG_USERNAME}
    JFROG_PASSWORD = {env:JFROG_PASSWORD}
deps =
    pipenv
    {toxinidir}/../../lib/huxunifylib-database
commands =
    {envbindir}/pip install --upgrade pip
    {envbindir}/pip install pipenv

    # lock current deps to make it easier/faster for docker to build
    # use bash so we can pipe output
    bash -c \'{envbindir}/pipenv lock --pre --dev --keep-outdated --requirements > requirements.txt\'

    # use pip for docker to generate the list of requirements.
    {envbindir}/pip install -r {toxinidir}/requirements.txt


# setup the test environment for PY37 and testing the huxunify package
[testenv:py37]
deps =
    {[testenv]deps}
    pytest
commands =
    {[testenv]commands}

    # run the pytests
    pipenv run '{envbindir}/pytest'

# setup the environment for testing the style of the huxunify package
[testenv:style]
deps =
    {[testenv]deps}
    pylint
    black
commands =
    {[testenv]commands}

    # run pylint
    pipenv run '{envbindir}/pylint' --rcfile=../../.pylintrc '{toxinidir}/huxunify'

    # run the black check
    pipenv run '{envbindir}/black' --check '{toxinidir}/huxunify' --line-length 79

[testenv:safety]
deps = {[testenv]deps}
commands =
    {[testenv]commands}
    pipenv run '{envbindir}/safety' check
