version: "1.0"

stages:
  - prepare
  - git
  - build_tag
  - set_env
  - tests
  - build_app
  - artifactory
  - argo-deploy

steps:
  PrepareBuildDetails:
    stage: prepare
    title: Prepare Build Details
    type: parallel
    steps:
      GetTriggerName:
        stage: prepare
        title: get trigger name using id from spec yaml
        type: deloittehux/get-trigger-name
      BuildNumber:
        stage: prepare
        title: Bump default BUILD_NUMBER annotation
        type: bump-build-number

  CloneRepository:
    stage: git
    title: Cloning ${{CF_REPO_NAME}} repository...
    type: git-clone
    repo: "${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}"
    revision: "${{CF_BRANCH}}"

  NumberTag:
    stage: build_tag
    description: Set docker tag from build number
    type: freestyle
    image: huxhub.repo.mgnt.in/alpine
    commands:
      - cf_export DOCKER_TAG=${{CF_BUILD_NUMBER}}

  VersionTag:
    stage: build_tag
    description: Set docker tag based Git tag
    type: freestyle
    image: huxhub.repo.mgnt.in/alpine
    commands:
      - cf_export DOCKER_TAG=${{CF_BRANCH}}
    when:
      branch:
        only:
          - /^app.*/i

  set_env_var:
    stage: set_env
    title: Set environment variables
    type: freestyle
    image: huxhub.repo.mgnt.in/alpine
    working_directory: "${{CF_REPO_NAME}}"
    commands: 
      - cat ./hux/frontend/ci/$TRIGGER_NAME/config.env >> ${{CF_VOLUME_PATH}}/env_vars_to_export

  TestImage:
    stage: tests
    title: "Building test image."
    type: build
    working_directory: "${{CF_REPO_NAME}}/${{SUB_REPO}}"
    dockerfile: Dockerfile
    image_name: ${{BUILD_NAME}}
    # tag: ${{DOCKER_TAG}}
    target: test
    no_cache: false
    no_cf_cache: false

  UnitTests:
    stage: tests
    title: "Running unit tests."
    image: ${{TestImage}}
    working_directory: ${{CF_REPO_NAME}}/${{SUB_REPO}}
    commands:
      - yarn test:unit

  Lint:
    stage: tests
    title: "Running lint."
    image: ${{TestImage}}
    working_directory: ${{CF_REPO_NAME}}/${{SUB_REPO}}
    commands:
      - yarn lint

  AppImage:
    stage: build_app
    title: "Building application image."
    type: build
    working_directory: ${{CF_REPO_NAME}}/${{SUB_REPO}}
    dockerfile: Dockerfile
    image_name: ${{BUILD_NAME}}
    tag: ${{DOCKER_TAG}}
    target: release
    no_cache: false
    no_cf_cache: false
    build_arguments:
      - API_URL=${{API_URL}}
      - OKTA_CLIENT_ID=${{OKTA_CLIENT_ID}}
      - OKTA_ISSUER=${{OKTA_ISSUER}}

  PublishToArtifactory:
    stage: artifactory
    title: Publish artifact and codefresh build info to Artifactory
    type: deloittehux/jfrog-docker-publish
    arguments:
      BUILD_NAME: "${{BUILD_NAME}}"
      BUILD_NUMBER: "${{DOCKER_TAG}}"
      JFROG_REGISTRY: "${{JFROG_REGISTRY}}"
      BUILD_TAG: "${{DOCKER_TAG}}"
    when:
      branch:
        only:
          - main
          # TODO: remove used for testing
          - docker-multistage-builds
          - /^app.*/i

  Deployment:
    stage: argo-deploy
    description: "Deploy the application"
    type: freestyle
    image: huxhub.repo.mgnt.in/codefresh/cli:latest
    commands:
      - >-
        codefresh run Hux_Unified_Solution/unified_solution_cd -d -t
        DeloitteHux/hux-unified-deploy -b 'main' --variable
        DOCKER_TAG=${{DOCKER_TAG}} --variable FILE_NAME="${{FILE_NAME}}"
        --variable APP_NAME="${{BUILD_NAME}}" --variable
        COMMIT_MESSAGE="${{CF_COMMIT_MESSAGE}}" --variable
        COMMIT_AUTHOR="${{CF_COMMIT_AUTHOR}}"
    when:
      branch:
        only:
          - main
          - /^app.*/i
