version: "1.0"

stages:
  - prepare
  - git
  - build_tag
  - docker
  - test
  - artifactory
  - argo-deploy

steps:
  PrepareBuildDetails:
    stage: prepare
    title: Prepare Build Details
    type: parallel
    steps:
      BuildName:
        stage: prepare
        title: Set build variables
        image: alpine
        commands:
          - cf_export BUILD_NAME=unified-ui
          - cf_export JFROG_REGISTRY=unified-docker-dev-local
          - cf_export SUB_REPO=hux/frontend
          - cf_export PORT=80
          - cf_export FILE_NAME=values-main-use1-hux-unified-dev1.yaml

      BuildNumber:
        stage: prepare
        title: Bump default BUILD_NUMBER annotation
        type: bump-build-number

  CloneRepository:
    stage: git
    title: Cloning ${{CF_REPO_NAME}} repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}' 

  NumberTag:
    stage: build_tag
    description: Set docker tag from build number
    type: freestyle
    image: alpine
    commands: 
      - cf_export DOCKER_TAG=${{CF_BUILD_NUMBER}}

# Below step can be used for tagging image with Git_Release_Tag and will only execute for "main" branch
  # VersionTag:
  #   stage: build_tag
  #   description: Set docker tag based Git tag
  #   type: freestyle
  #   image: alpine
  #   commands: 
  #     - cf_export DOCKER_TAG=${{CF_RELEASE_TAG}}      
  #   when:
  #     condition:
  #       all:
  #         masterBranch: '"${{CF_BRANCH}}" == "main"'

  DockerBuild:
    title: "Building Docker image"
    type: "build"
    image_name: "${{BUILD_NAME}}"
    working_directory: "${{CF_REPO_NAME}}/${{SUB_REPO}}"
    tag: '${{CF_BUILD_NUMBER}}'
    dockerfile: "Dockerfile"
    stage: "docker"

# Below step can be used if development team has some endpoint like healthcheck for unittesting
  # Unittest:
  #   stage: test
  #   title: Unittesting Unified UI
  #   image: huxhub.repo.mgnt.in/codefresh/cli
  #   commands:
  #     - sleep 30
  #     - curl http://unifiedui:${{PORT}}/healthcheck
  #   services:
  #     composition:
  #       unifiedui:
  #         image: '${{DockerBuild}}'
  #         ports:
  #           - '${{PORT}}'
  
  PublishToArtifactory:
    stage: artifactory
    title: Publish artifact and codefresh build info to Artifactory
    type: deloittehux/jfrog-docker-publish
    arguments:
      BUILD_NAME: '${{BUILD_NAME}}'
      BUILD_NUMBER: '${{CF_BUILD_NUMBER}}'
      JFROG_REGISTRY: '${{JFROG_REGISTRY}}'
      BUILD_TAG: '${{CF_BUILD_NUMBER}}'
    when:
      condition:
        all:
          whenVarIsMissing: 'includes("${{CF_PULL_REQUEST_TARGET}}", "{{CF_PULL_REQUEST_TARGET}}") == true'

  deployment:
    stage: argo-deploy
    description: "Deploy the application"
    type: freestyle
    image: codefresh/cli:latest
    commands:
      - >-
        codefresh run Hux_Unified_Solution/unified_solution_cd -d -t
        DeloitteHux/hux-unified-deploy -b 'main' --variable
        DOCKER_TAG=${{DOCKER_TAG}} --variable FILE_NAME="${{FILE_NAME}}"
        --variable APP_NAME="${{BUILD_NAME}}" --variable
        COMMIT_MESSAGE="${{CF_COMMIT_MESSAGE}}" --variable
        COMMIT_AUTHOR="${{CF_COMMIT_AUTHOR}}"
    when:
      condition:
        all:
          whenVarIsMissing: 'includes("${{CF_PULL_REQUEST_TARGET}}", "{{CF_PULL_REQUEST_TARGET}}") == true'
