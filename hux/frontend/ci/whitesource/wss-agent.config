###############################################################
# WhiteSource Unified-Agent configuration file
# Full documentation at https://whitesource.atlassian.net/wiki/spaces/WD/pages/1544880156/Unified+Agent+Configuration+Parameters#NPM-+-Yarn
###############################################################

######################
# Organization vitals
######################

wss.url=https://deloitte.whitesourcesoftware.com/agent
#apiKey=  #API key provided as Shared Configuration in Codefresh
printCliErrors=true

######################
# Top level is Product
######################
productName=hux-unified
## productVersion will not be set on the high level Product
#productVersion=main

######################
# Under Product is Project
######################
projectName=unified-ui
## projectVersion will be set in pipeline depending on branch trigger
#projectVersion=main

######################
# Which files to include/exclude in the scan (file extensions, file names. folder names, etc.). 
# These parameters can receive a list of arguments delimited by a comma, semicolon, or space. 
# Use only one exclude line and one include line.
######################
includes=**/*.js
# excludes=
case.sensitive.glob=false
followSymbolicLinks=true
log.level=info

### Test
checkPolicies=true
forceUpdate=true
forceCheckAllDependencies=true
forceUpdate.failBuildOnPolicyViolation=true


###############################################################
# NPM Configuration Parameters
###############################################################

# npm.yarnProject
# Whether this is a yarn project (or not).
# Default: false

# npm.yarn.frozenLockfile
# Enables running the pre-step with the --frozen.lockfile yarn parameter.
# Default: false

npm.runPreStep=true
# Whether to run npm install or yarn install on found package.json file.
# Default: false

# npm.resolveMainPackageJsonOnly
# In npm projects, more than one package.json file can exist. Therefore, you can decide to resolve only the main package.json file (the one in the root directory) or all package.json files.
# Default: false

# npm.resolveLockFile
# Whether the Unified Agent will rely on the manifest (package.json) and lock file (package-lock.json) for the resolution and not rely on NPM commands. If the lock file is missing, the detection will be based on the node_modules folder.  
# Default: true

# npm.resolveGlobalPackages
# When scanning Docker images, and npm is not available, in order to extract global dependencies, this parameter eliminates the need to rely on NPM being installed and available; as the Unified Agent identifies all the global npm packages installed on the Docker image. When true - the Unified Agent will scan every package.json file inside node_modules directory. This parameter is mostly relevant when scanning Docker images.
# Default: false

# npm.resolveDependencies
# Whether to resolve npm dependencies.
# Default: true

# npm.resolveAdditionalDependencies
# Whether to resolve global dependencies and require modules.
# Default: false

# npm.removeDuplicateDependencies
# Whether to remove duplicate dependencies during npm dependency resolution.
# Default: true

# npm.projectNameFromDependencyFile
# Whether the project name will be taken from the dependency file. 
# Default: false

# npm.includeDevDependencies
# Whether to include dev dependencies.
# Default: false

# npm.ignoreSourceFiles
# When using the npm resolver, ignore or include the js files outside the node_modules folder.
# Default: true

# npm.ignoreScripts
# Whether to ignore the scripts in your project's package.json file.
# Default: false

# npm.ignoreNpmLsErrors
# Whether to ignore errors of the 'npm list' command.
# Default: false

# npm.ignoreDirectoryPatterns
# A string parameter that defines the list of directory patterns which will be ignored when searching for the package.json dependency file during the npm resolution.
# Default: example,examples,.ws_bower,test 

# npm.identifyByNameAndVersion
# Defines whether to fetch package data from npm registry (either private or public).
# Default: false

# npm.failOnNpmLsErrors
# Whether to fail and exit the scan in case of npm ls errors.
# Default: NULL (meaning False -  the scan will not fail on npm ls errors)

# npm.accessToken=
# The access token value provided by the relevant environment (Microsoft Visual Studio or Artifactory) to fetch required data from the NPM registry.
# Default: empty 
