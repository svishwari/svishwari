# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.


# run the following environments in this order
[tox]
envlist = py37, style, safety, checkCoverage

[testenv]
skip_install=true
setenv =
    ARTIFACTORY_PYTHON_READ = {env:ARTIFACTORY_PYTHON_READ}

deps =
    pipenv
commands =
    {envbindir}/pip install --upgrade pip
    {envbindir}/pip install pipenv --upgrade
    {envbindir}/pipenv install --ignore-pipfile --dev

    # install dev in a pre-release
    {envbindir}/pip install black



# setup the test environment for py37 and testing the huxunify package
[testenv:py37]

deps =
    {[testenv]deps}
    pytest
commands =

    {[testenv]commands}
    # run the pytests
    pipenv run '{envbindir}/pytest'


# setup the environment for testing the style of the huxunify package
[testenv:style]
deps =
    {[testenv]deps}
    pylint
    black
    mypy
commands =
    {[testenv]commands}

    # run pylint
    pipenv run pylint --rcfile=../.pylintrc '{toxinidir}/database'

    # run the black check
    pipenv run black --check '{toxinidir}/database' --line-length 79

    # run the mypy check
    pipenv run '{envbindir}/mypy' --config-file=../mypy.ini '{toxinidir}/database'


[testenv:safety]
deps =
    {[testenv]deps}
    safety
commands =
    {[testenv]commands}
    pipenv run safety check

[testenv:checkCoverage]
# Used for testing Coverage
deps=
    {[testenv]deps}
    coverage
commands=
    {[testenv]commands}
;    {envbindir}/pipenv run coverage run --rcfile={toxinidir}/../.coveragerc --source={toxinidir}/huxunify/api -m unittest
;    {envbindir}/pipenv run coverage report --rcfile={toxinidir}/../.coveragerc
