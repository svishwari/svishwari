# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.


# run the following environments in this order
[tox]
envlist = py37, style, safety

[testenv]
skip_install=true
setenv =
    ARTIFACTORY_PYTHON_READ = {env:ARTIFACTORY_PYTHON_READ}

deps =
    pipenv
commands =
    {envbindir}/pip install --upgrade pip
    {envbindir}/pip install pipenv

    # lock current deps using the pipenv hashes to create requirements.txt
    # use bash so we can pipe output
    bash -c 'pipenv lock --pre --dev --keep-outdated --requirements > requirements.txt'

    # use pip for docker to generate the list of requirements.
    {envbindir}/pip install -r {toxinidir}/requirements.txt



# setup the test environment for py37 and testing the huxunify package
[testenv:py37]

deps =
    pytest
commands =

    {[testenv]commands}
    # run the pytests
    pipenv run '{envbindir}/pytest'


# setup the environment for testing the style of the huxunify package
[testenv:style]
deps =
    {[testenv]deps}
    pylint
    black
    mypy
commands =
    {[testenv]commands}

    # run pylint
    pipenv run pylint --rcfile=../.pylintrc '{toxinidir}/database'

    # run the black check
    pipenv run black --check '{toxinidir}/database' --line-length 79

    # run the mypy check
    pipenv run '{envbindir}/mypy' --config-file=../mypy.ini '{toxinidir}/database'


[testenv:safety]
deps = pipenv
commands =
    pip install --upgrade pip
    # install dependencies to the test-requirements, have to specify dev because of black pkg
    pipenv install --dev --ignore-pipfile
    pipenv run '{envbindir}/safety' check
